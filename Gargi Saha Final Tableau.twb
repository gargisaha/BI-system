<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource caption='ProductView (gargisDW)' inline='true' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' version='9.3'>
      <connection authentication='sspi' class='sqlserver' dbname='gargisDW' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' server='smith-bi1.ischool.uw.edu'>
        <relation name='ProductView' table='[dbo].[ProductView]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductCategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProductCategory]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>ProductCategory</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProductType]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>ProductType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSalesQuantity</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TotalSalesQuantity]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>TotalSalesQuantity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalAmount</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TotalAmount]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>TotalAmount</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FullDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[FullDate]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>FullDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MonthName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MonthName]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>MonthName</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>9</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CalendarYear</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CalendarYear]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>CalendarYear</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalesQuantityTarget</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SalesQuantityTarget]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>SalesQuantityTarget</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Color]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>Color</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProfitMargin</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ProfitMargin]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>ProfitMargin</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>131</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[ProductView]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unit Profit $' datatype='real' name='[Calculation_343962442774736896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Price]-[cost]' />
      </column>
      <column caption='Unit Profit Margin %' datatype='real' name='[Calculation_343962442777051137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Price]-[cost])/[Price]*100' />
      </column>
      <column caption='Profit $' datatype='real' name='[Calculation_343962442790547458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalAmount]-([cost]*[TotalSalesQuantity])' />
      </column>
      <column caption='Calendar Year' datatype='integer' name='[CalendarYear]' role='dimension' type='quantitative' />
      <column caption='Full Date' datatype='date' name='[FullDate]' role='dimension' type='ordinal' />
      <column caption='Month Name' datatype='string' name='[MonthName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[ProductType]' role='dimension' type='nominal' />
      <column caption='Product' datatype='string' name='[Product]' role='dimension' type='nominal' />
      <column caption='Profit Margin' datatype='integer' name='[ProfitMargin]' role='measure' type='quantitative' />
      <column caption='Sales Quantity Target' datatype='real' datatype-customized='true' name='[SalesQuantityTarget]' role='measure' type='quantitative' />
      <column caption='Total Amount' datatype='real' name='[TotalAmount]' role='measure' type='quantitative' />
      <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
      <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_343962442790547458]' derivation='Avg' name='[avg:Calculation_343962442790547458:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalSalesQuantity]' derivation='Avg' name='[avg:TotalSalesQuantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_343962442790547458]' derivation='Sum' name='[sum:Calculation_343962442790547458:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SalesQuantityTarget]' derivation='Sum' name='[sum:SalesQuantityTarget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalSalesQuantity]' derivation='Sum' name='[sum:TotalSalesQuantity:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\mac\Home\Documents\My Tableau Repository\Datasources\ProductView (gargisDW).tde' schema='Extract' tablename='Extract' update-time='06/03/2016 02:16:01 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_343962442774736896]' formula='[Price]-[cost]' />
            <calculation column='[Calculation_343962442777051137]' formula='([Price]-[cost])/[Price]*100' />
            <calculation column='[Calculation_343962442790547458]' formula='[TotalAmount]-([cost]*[TotalSalesQuantity])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='17520' timestamp-start='2016-06-03 02:16:01.488' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_343962442774736896</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_343962442774736896]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_343962442774736896</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.4900000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>78.989999999999995</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_343962442777051137</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_343962442777051137]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_343962442777051137</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>47.368421052631575</statistic>
                <statistic aggregation='Max' datatype='real'>79.959919839679358</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_343962442790547458</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_343962442790547458]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_343962442790547458</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15977</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1000579725.3100019</statistic>
                <statistic aggregation='Avg' datatype='real'>62318.119413926375</statistic>
                <statistic aggregation='Min' datatype='real'>350.22000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>600699.06000000006</statistic>
                <statistic aggregation='Stdev' datatype='real'>79425.137272129752</statistic>
                <statistic aggregation='StdevP' datatype='real'>79422.663854902552</statistic>
                <statistic aggregation='Var' datatype='real'>6308352430.6966553</statistic>
                <statistic aggregation='VarP' datatype='real'>6307959533.8088436</statistic>
                <statistic aggregation='Count' datatype='integer'>16056</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>163634845079857.12</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CalendarYear</remote-name>
              <remote-type>2</remote-type>
              <local-name>[CalendarYear]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CalendarYear</remote-alias>
              <ordinal>3</ordinal>
              <family>ProductView</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2013</statistic>
                <statistic aggregation='Max' datatype='integer'>2014</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
                <statistic aggregation='Median' datatype='integer'>2014</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Color]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Color</remote-alias>
              <ordinal>4</ordinal>
              <family>ProductView</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Black&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>16060</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FullDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FullDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FullDate</remote-alias>
              <ordinal>5</ordinal>
              <family>ProductView</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>730</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2013-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MonthName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[MonthName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MonthName</remote-alias>
              <ordinal>6</ordinal>
              <family>ProductView</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>9</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;April&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;September&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>36</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>7</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Price</remote-alias>
              <ordinal>8</ordinal>
              <family>ProductView</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>4.9900000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>117.98999999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProductCategory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ProductCategory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ProductCategory</remote-alias>
              <ordinal>9</ordinal>
              <family>ProductView</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Women&apos;s Apparel&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProductType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ProductType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ProductType</remote-alias>
              <ordinal>10</ordinal>
              <family>ProductView</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Baby 0-2&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Women&apos;s Formal&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product</remote-alias>
              <ordinal>11</ordinal>
              <family>ProductView</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Amytheyst Necklace&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White Socks, 6 pack&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProfitMargin</remote-name>
              <remote-type>16</remote-type>
              <local-name>[ProfitMargin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ProfitMargin</remote-alias>
              <ordinal>12</ordinal>
              <family>ProductView</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SalesQuantityTarget</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SalesQuantityTarget]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SalesQuantityTarget</remote-alias>
              <ordinal>13</ordinal>
              <family>ProductView</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1095.0</statistic>
                <statistic aggregation='Max' datatype='real'>12522.827300000001</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalAmount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalAmount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalAmount</remote-alias>
              <ordinal>14</ordinal>
              <family>ProductView</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15992</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2446566496.8099999</statistic>
                <statistic aggregation='Avg' datatype='real'>152377.08624875435</statistic>
                <statistic aggregation='Min' datatype='real'>528.94000000000005</statistic>
                <statistic aggregation='Max' datatype='real'>1399555.5600000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>191314.85148237785</statistic>
                <statistic aggregation='StdevP' datatype='real'>191308.89365258079</statistic>
                <statistic aggregation='Var' datatype='real'>36601372397.724297</statistic>
                <statistic aggregation='VarP' datatype='real'>36599092790.574463</statistic>
                <statistic aggregation='Count' datatype='integer'>16056</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>960435707943193.75</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalSalesQuantity</remote-name>
              <remote-type>2</remote-type>
              <local-name>[TotalSalesQuantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalSalesQuantity</remote-alias>
              <ordinal>15</ordinal>
              <family>ProductView</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8669</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>90858437.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5658.8463502740406</statistic>
                <statistic aggregation='Min' datatype='integer'>78</statistic>
                <statistic aggregation='Max' datatype='integer'>22648</statistic>
                <statistic aggregation='Stdev' datatype='real'>3486.7258714507216</statistic>
                <statistic aggregation='StdevP' datatype='real'>3486.6172896070739</statistic>
                <statistic aggregation='Var' datatype='real'>12157257.302643795</statistic>
                <statistic aggregation='VarP' datatype='real'>12156500.124186978</statistic>
                <statistic aggregation='Count' datatype='integer'>16056</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>709338700603.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cost</remote-name>
              <remote-type>4</remote-type>
              <local-name>[cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cost</remote-alias>
              <ordinal>16</ordinal>
              <family>ProductView</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>39.0</statistic>
                <statistic aggregation='Count' datatype='integer'>17520</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.462298' measure-ordering='alphabetic' measure-percentage='0.537702' rowDisplayCount='1000' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Product:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Strapless Dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Amytheyst Necklace&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Thomas the Train Pajamas&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Buttondown Shirt&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Silver Ring, Gallic pattern&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Girl&apos;s Dress&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dressing Gown&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Captain America T-Shirt&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;T-Shirt&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Blouse&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;White Socks, 6 pack&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Skirt&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Lipstick&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Formal Pants&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Silver Ring, plain&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Denim Jeans&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Spider-man T-shirt&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pajamas&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Shoes, High-heel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Blue Onesie Pajamas&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dress&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Blush&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442790547458:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:TotalSalesQuantity:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ProductCategory:nk]' type='palette'>
            <map to='#7b66d2'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#94917b'>
              <bucket>&quot;Men&apos;s Apparel&quot;</bucket>
            </map>
            <map to='#995688'>
              <bucket>&quot;Women&apos;s Apparel&quot;</bucket>
            </map>
            <map to='#dc5fbd'>
              <bucket>&quot;Children&apos;s Apparel&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Product' />
        <field-sort-custom-order field='ProductCategory' />
        <field-sort-custom-order field='ProductType' />
        <field-sort-custom-order field='TotalSalesQuantity' />
        <field-sort-custom-order field='TotalAmount' />
        <field-sort-custom-order field='FullDate' />
        <field-sort-custom-order field='MonthName' />
        <field-sort-custom-order field='CalendarYear' />
        <field-sort-custom-order field='SalesQuantityTarget' />
        <field-sort-custom-order field='Color' />
        <field-sort-custom-order field='Price' />
        <field-sort-custom-order field='ProfitMargin' />
        <field-sort-custom-order field='WholesalePrice' />
        <field-sort-custom-order field='WholesaleProfitMargin' />
        <field-sort-custom-order field='cost' />
        <field-sort-custom-order field='Calculation_343962442774736896' />
        <field-sort-custom-order field='Calculation_343962442777051137' />
        <field-sort-custom-order field='Calculation_343962442790547458' />
      </field-sort-info>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Product type performance by year' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Product type performance by year' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Product category performance by year' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Product category performance by year' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Product performance by year' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Product performance by year' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Product Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Profit $' datatype='real' name='[Calculation_343962442790547458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalAmount]-([cost]*[TotalSalesQuantity])' />
            </column>
            <column caption='Calendar Year' datatype='integer' name='[CalendarYear]' role='dimension' type='quantitative' />
            <column caption='Month Name' datatype='string' name='[MonthName]' role='dimension' type='nominal' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Product Type' datatype='string' name='[ProductType]' role='dimension' type='nominal' />
            <column caption='Product' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column caption='Total Amount' datatype='real' name='[TotalAmount]' role='measure' type='quantitative' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[CalendarYear]' derivation='None' name='[none:CalendarYear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MonthName]' derivation='None' name='[none:MonthName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductType]' derivation='None' name='[none:ProductType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_343962442790547458]' derivation='Sum' name='[sum:Calculation_343962442790547458:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]' included-values='in-range'>
            <min>2013</min>
            <max>2014</max>
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:MonthName:nk]'>
            <groupfilter from='&quot;April&quot;' function='range' level='[none:MonthName:nk]' to='&quot;September&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amytheyst Necklace&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blouse&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blue Onesie Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blush&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Buttondown Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Captain America T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Denim Jeans&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dressing Gown&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Formal Pants&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Girl&apos;s Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lipstick&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Shoes, High-heel&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, Gallic pattern&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, plain&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Skirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Spider-man T-shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Strapless Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Thomas the Train Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;White Socks, 6 pack&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]' direction='DESC' using='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]' />
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]'>
            <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:ProductCategory:nk]' to='&quot;Women&apos;s Apparel&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]'>
            <groupfilter from='&quot;Baby 0-2&quot;' function='range' level='[none:ProductType:nk]' to='&quot;Women&apos;s Formal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:MonthName:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]' value='43' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' />
              <size column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]' />
              <text column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</rows>
        <cols>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Product Profitability'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Unit Profit $' datatype='real' name='[Calculation_343962442774736896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]-[cost]' />
            </column>
            <column caption='Unit Profit Margin %' datatype='real' name='[Calculation_343962442777051137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Price]-[cost])/[Price]*100' />
            </column>
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Product Type' datatype='string' name='[ProductType]' role='dimension' type='nominal' />
            <column caption='Product' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_343962442774736896]' derivation='None' name='[none:Calculation_343962442774736896:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_343962442777051137]' derivation='None' name='[none:Calculation_343962442777051137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductType]' derivation='None' name='[none:ProductType:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amytheyst Necklace&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blouse&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blue Onesie Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blush&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Buttondown Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Captain America T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Denim Jeans&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dressing Gown&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Formal Pants&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Girl&apos;s Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lipstick&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Shoes, High-heel&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, Gallic pattern&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, plain&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Skirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Spider-man T-shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Strapless Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Thomas the Train Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;White Socks, 6 pack&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]'>
            <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:ProductCategory:nk]' to='&quot;Women&apos;s Apparel&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]'>
            <groupfilter from='&quot;Baby 0-2&quot;' function='range' level='[none:ProductType:nk]' to='&quot;Women&apos;s Formal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' />
              <shape column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]' />
              <text column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]' />
            </encodings>
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442774736896:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442774736896:qk]' z-order='1' />
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442777051137:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442777051137:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.022099494934082' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442777051137:qk]</rows>
        <cols>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442774736896:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Product Sales Qty vs Target'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Calendar Year' datatype='integer' name='[CalendarYear]' role='dimension' type='quantitative' />
            <column caption='Full Date' datatype='date' name='[FullDate]' role='dimension' type='ordinal' />
            <column caption='Month Name' datatype='string' name='[MonthName]' role='dimension' type='nominal' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Product Type' datatype='string' name='[ProductType]' role='dimension' type='nominal' />
            <column caption='Product' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column caption='Sales Quantity Target' datatype='real' datatype-customized='true' name='[SalesQuantityTarget]' role='measure' type='quantitative' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column-instance column='[CalendarYear]' derivation='None' name='[none:CalendarYear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MonthName]' derivation='None' name='[none:MonthName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductType]' derivation='None' name='[none:ProductType:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalesQuantityTarget]' derivation='Sum' name='[sum:SalesQuantityTarget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSalesQuantity]' derivation='Sum' name='[sum:TotalSalesQuantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FullDate]' derivation='Weekday' name='[wd:FullDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FullDate]' derivation='Year' name='[yr:FullDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:MonthName:nk]'>
            <groupfilter from='&quot;April&quot;' function='range' level='[none:MonthName:nk]' to='&quot;September&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amytheyst Necklace&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blouse&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blue Onesie Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blush&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Buttondown Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Captain America T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Denim Jeans&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dressing Gown&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Formal Pants&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Girl&apos;s Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lipstick&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Shoes, High-heel&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, Gallic pattern&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, plain&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Skirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Spider-man T-shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Strapless Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Thomas the Train Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;White Socks, 6 pack&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]' direction='DESC' using='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]' />
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]'>
            <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:ProductCategory:nk]' to='&quot;Women&apos;s Apparel&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]'>
            <groupfilter from='&quot;Baby 0-2&quot;' function='range' level='[none:ProductType:nk]' to='&quot;Women&apos;s Formal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[wd:FullDate:ok]'>
            <groupfilter function='level-members' level='[wd:FullDate:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[yr:FullDate:ok]'>
            <groupfilter function='level-members' level='[yr:FullDate:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:MonthName:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[wd:FullDate:ok]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[yr:FullDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]' value='43' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
            <format attr='background-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' value='#d8504c67' />
            <format attr='stroke-size' value='5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]' />
              <lod column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]' />
            </encodings>
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]' enable-instant-analytics='true' formula='total' id='refline0' label-type='value' scope='per-cell' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</rows>
        <cols>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Product Type Profitability'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Unit Profit $' datatype='real' name='[Calculation_343962442774736896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]-[cost]' />
            </column>
            <column caption='Unit Profit Margin %' datatype='real' name='[Calculation_343962442777051137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Price]-[cost])/[Price]*100' />
            </column>
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Product Type' datatype='string' name='[ProductType]' role='dimension' type='nominal' />
            <column caption='Product' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductType]' derivation='None' name='[none:ProductType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_343962442774736896]' derivation='Sum' name='[sum:Calculation_343962442774736896:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_343962442777051137]' derivation='Sum' name='[sum:Calculation_343962442777051137:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amytheyst Necklace&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blouse&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blue Onesie Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blush&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Buttondown Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Captain America T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Denim Jeans&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dressing Gown&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Formal Pants&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Girl&apos;s Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lipstick&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Shoes, High-heel&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, Gallic pattern&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, plain&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Skirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Spider-man T-shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Strapless Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Thomas the Train Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;White Socks, 6 pack&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]'>
            <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:ProductCategory:nk]' to='&quot;Women&apos;s Apparel&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]'>
            <groupfilter from='&quot;Baby 0-2&quot;' function='range' level='[none:ProductType:nk]' to='&quot;Women&apos;s Formal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]' />
              <size column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' />
              <text column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.813093900680542' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442777051137:qk]</rows>
        <cols>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442774736896:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Product category performance by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Full Date' datatype='date' name='[FullDate]' role='dimension' type='ordinal' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Sales Quantity Target' datatype='real' datatype-customized='true' name='[SalesQuantityTarget]' role='measure' type='quantitative' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column-instance column='[FullDate]' derivation='Month' name='[mn:FullDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalesQuantityTarget]' derivation='Sum' name='[sum:SalesQuantityTarget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSalesQuantity]' derivation='Sum' name='[sum:TotalSalesQuantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FullDate]' derivation='Year-Trunc' name='[tyr:FullDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;</bucket>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]'>
            <groupfilter function='member' level='[tyr:FullDate:ok]' member='#2014-01-01 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='Sales Quantity' />
            <format attr='subtitle' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' value='154' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-cell' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]</rows>
        <cols>([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk] / ([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[mn:FullDate:ok] / [sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Product performance by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Full Date' datatype='date' name='[FullDate]' role='dimension' type='ordinal' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Product' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column caption='Sales Quantity Target' datatype='real' datatype-customized='true' name='[SalesQuantityTarget]' role='measure' type='quantitative' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalesQuantityTarget]' derivation='Sum' name='[sum:SalesQuantityTarget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSalesQuantity]' derivation='Sum' name='[sum:TotalSalesQuantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FullDate]' derivation='Year-Trunc' name='[tyr:FullDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;</bucket>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]'>
            <groupfilter function='level-members' level='[tyr:FullDate:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='Sales Quantity' />
            <format attr='subtitle' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' value='154' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' />
              <lod column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-cell' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]</rows>
        <cols>([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk] / ([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok] / [sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]))</cols>
        <annotations>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#437564' fontsize='16'>Best</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.717087'>
                  <node-reference>
                    <fields>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</field>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Women&apos;s Apparel&quot;</bucket>
                      <bucket>#2013-01-01 00:00:00#</bucket>
                      <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='19672568.786337208'>
                  <node-reference>
                    <axis>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.398319'>
                  <node-reference>
                    <fields>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</field>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Women&apos;s Apparel&quot;</bucket>
                      <bucket>#2014-01-01 00:00:00#</bucket>
                      <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='18304856.861191858'>
                  <node-reference>
                    <axis>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='5' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#437564' fontsize='14'>Worst</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.109726'>
                  <node-reference>
                    <fields>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</field>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Men&apos;s Apparel&quot;</bucket>
                      <bucket>#2014-01-01 00:00:00#</bucket>
                      <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='15269660.534156976'>
                  <node-reference>
                    <axis>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.745636'>
                  <node-reference>
                    <fields>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</field>
                      <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Men&apos;s Apparel&quot;</bucket>
                      <bucket>#2014-01-01 00:00:00#</bucket>
                      <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='13396082.554505814'>
                  <node-reference>
                    <axis>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Product type performance by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Full Date' datatype='date' name='[FullDate]' role='dimension' type='ordinal' />
            <column caption='Product Type' datatype='string' name='[ProductType]' role='dimension' type='nominal' />
            <column caption='Sales Quantity Target' datatype='real' datatype-customized='true' name='[SalesQuantityTarget]' role='measure' type='quantitative' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column-instance column='[ProductType]' derivation='None' name='[none:ProductType:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalesQuantityTarget]' derivation='Sum' name='[sum:SalesQuantityTarget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSalesQuantity]' derivation='Sum' name='[sum:TotalSalesQuantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FullDate]' derivation='Year-Trunc' name='[tyr:FullDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]&quot;</bucket>
              <bucket>&quot;[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:SalesQuantityTarget:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]'>
            <groupfilter function='level-members' level='[tyr:FullDate:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='Sales Quantity' />
            <format attr='subtitle' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-cell' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[Multiple Values]</rows>
        <cols>([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk] / ([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok] / [sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sales Profit by day of week'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Profit $' datatype='real' name='[Calculation_343962442790547458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalAmount]-([cost]*[TotalSalesQuantity])' />
            </column>
            <column caption='Full Date' datatype='date' name='[FullDate]' role='dimension' type='ordinal' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Total Amount' datatype='real' name='[TotalAmount]' role='measure' type='quantitative' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_343962442790547458]' derivation='Sum' name='[sum:Calculation_343962442790547458:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FullDate]' derivation='Weekday' name='[wd:FullDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' value='69' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' />
            </encodings>
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='value' scope='per-cell' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]</rows>
        <cols>([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[wd:FullDate:ok] / [sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sales Quantity by day of week'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Full Date' datatype='date' name='[FullDate]' role='dimension' type='ordinal' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalSalesQuantity]' derivation='Sum' name='[sum:TotalSalesQuantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FullDate]' derivation='Weekday' name='[wd:FullDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='natural' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' value='69' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' />
            </encodings>
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='value' scope='per-cell' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]</rows>
        <cols>([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[wd:FullDate:ok] / [sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Calendar Year' datatype='integer' name='[CalendarYear]' role='dimension' type='quantitative' />
            <column caption='Month Name' datatype='string' name='[MonthName]' role='dimension' type='nominal' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column-instance column='[CalendarYear]' derivation='None' name='[none:CalendarYear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MonthName]' derivation='None' name='[none:MonthName:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalSalesQuantity]' derivation='Sum' name='[sum:TotalSalesQuantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:TotalSalesQuantity:qk]</rows>
        <cols>([sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:MonthName:nk] * [sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='product category profitability'>
      <table>
        <view>
          <datasources>
            <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
            <column caption='Unit Profit $' datatype='real' name='[Calculation_343962442774736896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]-[cost]' />
            </column>
            <column caption='Unit Profit Margin %' datatype='real' name='[Calculation_343962442777051137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Price]-[cost])/[Price]*100' />
            </column>
            <column caption='Profit $' datatype='real' name='[Calculation_343962442790547458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalAmount]-([cost]*[TotalSalesQuantity])' />
            </column>
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column caption='Product Category' datatype='string' name='[ProductCategory]' role='dimension' type='nominal' />
            <column caption='Product Type' datatype='string' name='[ProductType]' role='dimension' type='nominal' />
            <column caption='Product' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column caption='Total Amount' datatype='real' name='[TotalAmount]' role='measure' type='quantitative' />
            <column caption='Total Sales Quantity' datatype='integer' name='[TotalSalesQuantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_343962442774736896]' derivation='Avg' name='[avg:Calculation_343962442774736896:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_343962442777051137]' derivation='Avg' name='[avg:Calculation_343962442777051137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_343962442790547458]' derivation='Avg' name='[avg:Calculation_343962442790547458:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductCategory]' derivation='None' name='[none:ProductCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductType]' derivation='None' name='[none:ProductType:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amytheyst Necklace&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blouse&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blue Onesie Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Blush&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Buttondown Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Captain America T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Denim Jeans&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Dressing Gown&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Formal Pants&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Girl&apos;s Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lipstick&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Shoes, High-heel&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, Gallic pattern&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Silver Ring, plain&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Skirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Spider-man T-shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Strapless Dress&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;T-Shirt&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;Thomas the Train Pajamas&quot;' />
              <groupfilter function='member' level='[none:Product:nk]' member='&quot;White Socks, 6 pack&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]'>
            <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:ProductCategory:nk]' to='&quot;Women&apos;s Apparel&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]'>
            <groupfilter from='&quot;Baby 0-2&quot;' function='range' level='[none:ProductType:nk]' to='&quot;Women&apos;s Formal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</column>
            <column>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' />
              <text column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' />
              <size column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442790547458:qk]' />
            </encodings>
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442774736896:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442774736896:qk]' z-order='1' />
            <reference-line axis-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442777051137:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442777051137:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='9.2995777130126953' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442777051137:qk]</rows>
        <cols>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442774736896:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='final Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <datasources>
        <datasource caption='ProductView (gargisDW)' name='sqlserver.0imvtp00upsltp15tt0ih0upw2nu' />
      </datasources>
      <datasource-dependencies datasource='sqlserver.0imvtp00upsltp15tt0ih0upw2nu'>
        <column caption='Full Date' datatype='date' name='[FullDate]' role='dimension' type='ordinal' />
        <column-instance column='[FullDate]' derivation='Year' name='[yr:FullDate:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='24' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='22' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='20' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='100000' id='18' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                  <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                    <zone h='100000' id='3' type='layout-basic' w='91530' x='0' y='0'>
                      <zone h='50000' id='11' name='Product Sales Qty vs Target' show-title='true' w='45765' x='45765' y='0' />
                      <zone h='50000' id='13' name='Product Profit' show-title='true' w='45765' x='0' y='50000' />
                      <zone h='50000' id='16' name='Sales Quantity by day of week' show-title='true' w='45765' x='45765' y='50000' />
                      <zone h='50000' id='25' name='Product Profitability' show-title='true' w='45765' x='0' y='0' />
                    </zone>
                    <zone fixed-size='191' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='8470' x='91530' y='0'>
                      <zone h='7866' id='12' name='Product Sales Qty vs Target' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[yr:FullDate:ok]' type='filter' w='8470' x='91530' y='0' />
                      <zone h='8677' id='14' name='Product Profit' pane-specification-id='1' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' type='color' w='8470' x='91530' y='7866' />
                      <zone h='10299' id='15' name='Product Profit' pane-specification-id='1' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]' type='size' w='8470' x='91530' y='16543' />
                      <zone h='18410' id='26' name='Product Profitability' pane-specification-id='2' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]' type='shape' w='8470' x='91530' y='26842' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='37'>
    <window class='worksheet' name='Product Profitability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]' type='shape' />
            <card pane-specification-id='2' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[attr:ProductType:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442774736896:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442777051137:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='product category profitability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' type='color' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[avg:Calculation_343962442790547458:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Product Type Profitability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]' type='color' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]' type='filter' />
            <card param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' type='filter' />
            <card param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[attr:ProductType:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442774736896:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_343962442777051137:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Product Sales Qty vs Target'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[yr:FullDate:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='74'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_458522758384005120:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Calculation_458522758385266690:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:MonthName:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:SalesQuantityTarget:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[wd:FullDate:ok]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[yr:FullDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Product Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' type='color' />
            <card pane-specification-id='1' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[sum:Calculation_343962442790547458:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:MonthName:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales Quantity by day of week'>
      <cards>
        <edge name='left'>
          <strip size='118'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[yr:FullDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales Profit by day of week'>
      <cards>
        <edge name='left'>
          <strip size='118'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[yr:FullDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Product type performance by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Product category performance by year'>
      <cards>
        <edge name='left'>
          <strip size='281'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Product performance by year'>
      <cards>
        <edge name='left'>
          <strip size='149'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='86'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[:Measure Names]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:Product:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductType:nk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:ok]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[tyr:FullDate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:CalendarYear:qk]</field>
            <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:MonthName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='final Dashboard'>
      <viewpoints>
        <viewpoint name='Product Profit'>
          <highlight>
            <color-one-way>
              <field>[sqlserver.0imvtp00upsltp15tt0ih0upw2nu].[none:ProductCategory:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Product Profitability'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Product Sales Qty vs Target' />
        <viewpoint name='Sales Quantity by day of week'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Product Profitability' width='192'>
      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
      1KkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='product category profitability' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Product Type Profitability' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Product Sales Qty vs Target' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Product Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity by day of week' width='192'>
      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
      hwP/LReJJ1wnZQdK1uU6WQuWLcC5t9+koKKWcjXJVCyJIZ3CF1UptpqJhb0oegtqNk19uRlr
      /U72dTSvRm4hVsSy7yBqG5pQvBOcujXOkSPP0N/7Di27ewj6p7GUV4AuiWdygIv3Zti9bROB
      QIB4PL4a2YX4wpYtQDwaJZJU2N/RxKkTp+g++hsMXX2X6ro2Mn4fBQUl1LXs5Pe+0cPrpy5i
      t9uxWq3LPawQa8Kyu0B7e46w9xO3Hf6Mz2W+07ICiYRYRev7wLsQy5ACCE2TAghNkwIITZMC
      CE2TAghNkwIITZMCCE2TAghNkwIITZMCCE2TAghNkwIITZMCCE2TAghNkwIITZMCCE37XAWI
      xWKo2TSuGRfxZBr/gpdUJks0HCQSSxCLxRfHvYxEc51XiBW17CWR2XSMf/LP/yX/9HeOcWY4
      y4udNVy8O41ZlyEZD6PoClDSGWpKDZS37KOrvWg1cguxIpbdApw7dYJKZy0pczU7GmycOHmc
      po49RIJzmO1lQBrP1ABX++fpaGuUUSHEU2XZAuzsPkhViZVYNMLsvIdtu48wcv09nI1bIRzA
      ZLHTtKWLV79zlOOnL8moEOKpsuwuUJWzgT969Q8B2Na1eFvPwV/ee3DJtN/esILJhFgFchRI
      aJoUQGiaFEBomhRAaJoUQGiaFEBomhRAaJoUQGiaFEBomhRAaJoUQGiaFEBomhRAaJoUQGia
      FEBomhRAaJoUQGja5ypAKBxCVRWmJqfIqirzrmkSqQxBnwd/KEooFEZVsvj9wVznFWJFLT8q
      RCrCH/+Lf80fvPIiYWsJN65fhKJaSN4mk0qioCObzuAogrqOZygrK12N3EKsiGW3AKffeB1H
      VTXDrhC7du1gYvA6tW0dxCJeTKUlqKTxTA1y+6GHtg1OGRVCPFWWLcChL71Ea6OTru0bePvk
      2zzz0u8wfvMc9Rs7MMTCWIscNG/byx/8gxc4+c4HMiqEeKosuwtkL6/kt3/ztwDY1LEHgD27
      Hw0PQfeSab9Zv2Vl0wmRY3IUSGiaFEBomhRAaJoUQGiaFEBomhRAaJoUQGiaFEBomhRAaJoU
      QGiaFEBomhRAaJoUQGiaFEBomhRAaJoUQGiaFEBo2rIFSMXDjIxPoaTjfPjhhwQicSbHhokm
      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
      TQogNO3/AbM4osVez/p/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales Profit by day of week' width='192'>
      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
      CF37HwzptY2RLJ9qAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Product type performance by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Product category performance by year' width='192'>
      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
      EmbLepoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Product performance by year' width='192'>
      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
      uQ0CGQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales by month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='final Dashboard' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
